# Default values for hotwheel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  backend:
    repository: swr.cn-south-1.myhuaweicloud.com/kubeclub/hotwheel-backend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.0"
  ui:
    repository: swr.cn-south-1.myhuaweicloud.com/kubeclub/hotwheel-ui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.0"
  agent:
    repository: swr.cn-south-1.myhuaweicloud.com/kubeclub/hotwheel-agent
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.0"



# 服务配置
config:
  database_url: jdbc:mysql://mysql/hotwheel?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
  database_username: 'root'
  database_password: &mysqlRootPassword kubeclub
  app_backend_url: 'http://backend.xxx.com'
  app_ui_url: 'http://www.xxx.com'
  redis:
    host: redis
    port: 6379
    password: &redisPassword kubeclub
  ldap:
    urls: ldap://xxx:389
    username: xxx
    password: xxx
    base: dc=kubeclub,dc=com
  gitlab:
    url: &gitlabUrl xx
    token: &gitlabToken xx
    userId: &gitlabUserId 1

# 依赖的中间件
mysql:
  enabled: true
  # 初始化风火轮平台的数据，第一次必需要，后续更新不用。
  insertInitData: true
  mysqlRootPassword: *mysqlRootPassword
  data:
    gitlab:
      url: *gitlabUrl
      token: *gitlabToken
      userId: *gitlabUserId
  # 为了快速体验，默认不持久化，正式环境要配置上
  persistence:
    enabled: true
redis:
  enabled: true
  redisPassword: *redisPassword
  # 为了快速体验，默认不持久化，正式环境要配置上
  persistence:
    enabled: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "hotwheel"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  backend:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: api.example.cn
        paths: []
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  ui:
    enabled: true
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: hotwheel.example.cn
        paths: [ ]
    tls: [ ]
  agent:
    enabled: true
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: hotwheelagent.example.cn
        paths: [ ]
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
